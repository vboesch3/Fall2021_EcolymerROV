/*
    This file has been generated by bvtidl.pl. DO NOT MODIFY!
*/
#ifndef __BVTSONAR_H__
#define __BVTSONAR_H__

#include <bvt_c/bvt_retval.h>
#include <bvt_c/bvt_sonar.h>
#include <bvt_c/bvt_head.h>

#ifndef DOXY_IGNORE
#ifdef _WIN32
#	ifdef BUILDING_BVTSDK
#		define BVTSDK_EXPORT __declspec(dllexport)
#	else
#		define BVTSDK_EXPORT __declspec(dllimport)
#	endif
#else
#	define BVTSDK_EXPORT
#endif
#endif

#ifdef __cplusplus
extern "C" {
#endif

/** \file
 * \defgroup BVTSonar BVTSonar Object
 * The Sonar object is the top level object in the SDK.  A sonar 
 * object embodies communication with a single physical sonar unit,
 * or file.  Each sonar contains several heads, which is where most
 * of the functionality is implemented.  Sonar also provides a
 * function to create new data files using BlueView's .son format.
 * @{
*/

/** Opaque type for the BVTSonar object */
typedef void* BVTSonar;

/** Create a BVTSonar object */
BVTSDK_EXPORT BVTSonar BVTSonar_Create();
/** Destroy a BVTSonar object
 * \param obj Object pointer
*/
BVTSDK_EXPORT void BVTSonar_Destroy(BVTSonar obj);

/** Open the sonar type 'type' using the specified parameters.
 * Allowed types (and parameters):
 * - FILE <br>
 * [filename] - Required <br>
 * - NET <br>
 * [host] - Connect to the specified host.<br>
 * \param obj Object pointer
 * \param type The type of sonar to open	
 * \param type_params Various type-specific parameters 
 */
BVTSDK_EXPORT RetVal BVTSonar_Open(BVTSonar obj, const char* type, const char* type_params);

/** Create a new data file.
 * Files are always created by 'cloning' another Sonar
 * object.  This ensures that the file receives all the
 * needed setup/configuration data needed to process 
 * images.
 * \param obj Object pointer
 * \param file_name The filename of the file to be created 
 * \param src The Sonar object to clone when creating the file 
 * \param create_params Parameters for (reserved for future use) 
 */
BVTSDK_EXPORT RetVal BVTSonar_CreateFile(BVTSonar obj, const char* file_name, const BVTSonar src, const char* create_params);

/** Gets the size of a file created with CreateFile(). Only works with
 * file type sonars. A networked sonar will return 0, as will a file
 * type sonar if there is no open file associated with it.
 * The return value must be multiplied by 1000 to get the actual
 * file size in bytes.
 * \param obj Object pointer
 */
BVTSDK_EXPORT int BVTSonar_GetFileSize(BVTSonar obj);

/** Retrieve a Head object from the sonar
 * \param obj Object pointer
 * \param head_num The head number to return 
 * \param head The returned Head object 
 */
BVTSDK_EXPORT RetVal BVTSonar_GetHead(BVTSonar obj, int head_num, BVTHead* head);

/** Return the number of heads on this sonar.
 * \param obj Object pointer
 */
BVTSDK_EXPORT int BVTSonar_GetHeadCount(BVTSonar obj);

/** Retrieves a copy of a short string with the model of the sonar.
 * At the time of this writing, 20 characters would easily hold all of
 * the sonar model names.
 * \param obj Object pointer
 * \param buffer buffer to hold the null-terminated string to be passed back 
 * \param buffer_size total number of characters the passed buffer can hold 
 */
BVTSDK_EXPORT RetVal BVTSonar_GetSonarTypeAsString(BVTSonar obj, char* buffer, int buffer_size);

/** Retrieves a copy of the name of the sonar. The name is set only via
 * the ProViewer application (at least at this time), or at the factory,
 * and is separate from any BlueView model designations. <br>
 * The length of the name could be considerably longer than the sonar type,
 * and there is no actual limit, though 80 characters would seem to be
 * more than enough.
 * \param obj Object pointer
 * \param buffer buffer to hold the null-terminated string to be passed back 
 * \param buffer_size total number of characters the passed buffer can hold 
 */
BVTSDK_EXPORT RetVal BVTSonar_GetSonarName(BVTSonar obj, char* buffer, int buffer_size);

/** Return the sonar's internal temperature in degrees Celsius
 * If the sonar doesn't have a temp sensor this function returns
 * absolute zero (-273.15)
 * \param obj Object pointer
 */
BVTSDK_EXPORT float BVTSonar_GetTemperature(BVTSonar obj);

/** @}*/

#ifdef __cplusplus
}
#endif

#endif
